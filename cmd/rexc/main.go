// rex/cmd/rexc/main.go

package main

import (
	"flag"
	"fmt"
	"os"

	"rgehrsitz/rex/pkg/compiler"

	"github.com/rs/zerolog/log"

	"rgehrsitz/rex/pkg/logging"
)

func main() {
	// Setup command-line flags
	jsonFilePath := flag.String("rules", "", "Path to the input JSON file")
	logLevel := flag.String("loglevel", "info", "Set log level: panic, fatal, error, warn, info, debug, trace")
	logOutput := flag.String("logoutput", "console", "Set log output: console or file")

	flag.Parse()

	// Configure zerolog based on the flags
	logging.ConfigureLogger(*logLevel, *logOutput)

	if *jsonFilePath == "" {
		log.Fatal().Msg("Input JSON file path is required")
	}

	// Read JSON file
	jsonData, err := os.ReadFile(*jsonFilePath)
	if err != nil {
		log.Fatal().Err(err).Msg("Failed to read JSON file")
	}

	// Parse JSON file
	ruleset, err := compiler.Parse(jsonData)
	if err != nil {
		log.Fatal().Err(err).Msg("Failed to parse JSON file")
	}

	// Generate bytecode
	bytecodeFile := compiler.GenerateBytecode(ruleset)

	// Print bytecode
	fmt.Println("Generated Bytecode:")

	// Write bytecode to file
	outputFilename := "output.bytecode"
	err = compiler.WriteBytecodeToFile(outputFilename, bytecodeFile)
	if err != nil {
		log.Fatal().Err(err).Msg("Failed to write bytecode to file")
	}

	log.Info().Msg("Successfully generated bytecode and wrote to file")
}
