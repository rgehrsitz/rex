// rex/cmd/rexc/main.go

package main

import (
	"fmt"
	"os"

	"rgehrsitz/rex/pkg/compiler"

	"github.com/rs/zerolog"
	"github.com/rs/zerolog/log"
)

func main() {
	// Configure logger
	zerolog.TimeFieldFormat = zerolog.TimeFormatUnix
	log.Logger = log.Output(zerolog.ConsoleWriter{Out: os.Stderr})

	if len(os.Args) < 2 {
		log.Fatal().Msg("Usage: rexc <path_to_json_file>")
	}

	jsonFilePath := os.Args[1]

	// Read JSON file
	jsonData, err := os.ReadFile(jsonFilePath)
	if err != nil {
		log.Fatal().Err(err).Msg("Failed to read JSON file")
	}

	// Parse JSON file
	ruleset, err := compiler.Parse(jsonData)
	if err != nil {
		log.Fatal().Err(err).Msg("Failed to parse JSON file")
	}

	// Generate bytecode
	bytecodeFile := compiler.GenerateBytecode(ruleset)

	// Print bytecode
	fmt.Println("Generated Bytecode:")

	// Write bytecode to file
	outputFilename := "output.bytecode"
	err = compiler.WriteBytecodeToFile(outputFilename, bytecodeFile)
	if err != nil {
		log.Fatal().Err(err).Msg("Failed to write bytecode to file")
	}

	log.Info().Msg("Successfully generated bytecode and wrote to file")
}
